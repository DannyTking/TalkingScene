#ifndef _QUAD_HELPER_H_#define _QUAD_HELPER_H_#include <GraphicsGL.h>#include "Color.h"namespace Walaber{	class Vector2;	class Rect;	class Color;		class QuadHelper	{	public:		static void drawQuad( GLuint textureName, const Vector2& pos, float angle, const Vector2& size, const Color& c = Color::White );		static void drawQuad( GLuint textureName, const Vector2& pos, float angle, const Vector2& size, const Rect& uvs, const unsigned int wrapS, const unsigned int wrapT,							 const Color& c = Color::White, bool forceWrap = false);		static void drawQuad( GLuint textureName, const Vector2& pos, float angle, const Vector2& size, const Rect& uvs, const Color& c = Color::White);		static void drawQuad( const Vector2& pos, float angle, const Vector2& size, const Color& c = Color::White );				static void drawQuadColored( const Vector2& pos, float angle, const Vector2& size, const Color& col );				static void drawQuadOutline( const Vector2& pos, float angle, const Vector2& size, float thickness, const Color& col );				static inline unsigned int packColor( unsigned char r, unsigned char g, unsigned char b, unsigned char a )		{			return ((a << 24) | (b << 16) | (g << 8) | (r));		}			private:				static GLfloat		mVerts[8];		static GLfloat		mTexCoords[8];		static GLfloat		mCustomTexCoords[8];		static GLuint		mColors[4];	};			}#endif	// _QUAD_HELPER_H_